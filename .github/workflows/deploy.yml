name: Replace Assistant to OpenAI

on:
  push:
    paths:
      - assistant_config.json

jobs:
  replace-assistant:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Replace Assistant on OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OLD_ASSISTANT_ID: ${{ secrets.ASSISTANT_ID }}
        run: |
          CONFIG_FILE="assistant_config.json"

          # Check if the config file exists
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "Configuration file not found!"
            exit 1
          fi

          # Validate the JSON format
          if ! jq empty "$CONFIG_FILE"; then
            echo "Invalid JSON format in $CONFIG_FILE"
            exit 1
          fi

          # Delete the old assistant (if allowed)
          echo "Deleting the old assistant with ID: $OLD_ASSISTANT_ID"
          curl -s -X DELETE "https://api.openai.com/v1/assistants/$OLD_ASSISTANT_ID" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "OpenAI-Beta: assistants=v2"

          # POST request to create a new assistant
          echo "Creating a new assistant..."
          curl -s -X POST "https://api.openai.com/v1/assistants" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -H "OpenAI-Beta: assistants=v2" \
            -d @$CONFIG_FILE \
            -o new_assistant_response.json

          # Check if there was an error during the request
          if jq '.error' new_assistant_response.json > /dev/null; then
            echo "Error during assistant creation:"
            cat new_assistant_response.json
            exit 1
          else
            echo "New assistant created successfully!"
            cat new_assistant_response.json
          fi
