name: Deploy Assistant to OpenAI

on:
  push:
    branches:
      - main

jobs:
  deploy-assistant:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest openai

      - name: Set up OpenAI API Key and Assistant ID
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "ASSISTANT_ID=${{ secrets.ASSISTANT_ID }}" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pytest test_eval_script.py

      - name: Extract Assistant ID
        id: extract-id
        run: |
          CONFIG_FILE="assistant_config.json"

          if [ ! -f "$CONFIG_FILE" ]; then
            echo "Configuration file not found!"
            exit 1
          fi

          if ! jq empty "$CONFIG_FILE"; then
            echo "Invalid JSON format in $CONFIG_FILE"
            exit 1
          fi

          ASSISTANT_ID=$(jq -r '.id // empty' "$CONFIG_FILE")
          if [ -z "$ASSISTANT_ID" ]; then
            echo "Assistant ID not found in $CONFIG_FILE. Exiting."
            exit 1
          fi

          echo "::set-output name=assistant_id::$ASSISTANT_ID"

      - name: Update Assistant on OpenAI
        if: success()
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ASSISTANT_ID: ${{ secrets.ASSISTANT_ID }}
        run: |
          CONFIG_FILE="assistant_config.json"
          ASSISTANT_ID="${{ steps.extract-id.outputs.assistant_id }}"
          API_URL="https://api.openai.com/v1/assistants/$ASSISTANT_ID"

          jq '{instructions, tools, model}' "$CONFIG_FILE" > temp_config.json

          echo "Payload being sent:"
          cat temp_config.json

          RESPONSE=$(curl -s -o response.json -w "%{http_code}" \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "OpenAI-Beta: assistants=v2" \
            -d @temp_config.json \
            "$API_URL")

          if [ "$RESPONSE" -eq 200 ]; then
            echo "Assistant successfully updated!"
            cat response.json
          else
            echo "Failed to update assistant. HTTP Status: $RESPONSE"
            cat response.json
            exit 1
